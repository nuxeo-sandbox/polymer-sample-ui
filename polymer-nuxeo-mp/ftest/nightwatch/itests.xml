<project name="nightwatch-tests" xmlns:artifact="urn:nuxeo-artifact" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <taskdef resource="org/nuxeo/build/antlib.xml" uri="urn:nuxeo-build"/>
    <taskdef resource="org/nuxeo/build/artifact/antlib.xml" uri="urn:nuxeo-artifact"/>
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>

    <property name="project.dir" value="${maven.basedir}"/>
    <property name="out.dir" value="${maven.project.build.directory}"/>
    <unzip dest="${out.dir}/" overwrite="false">
        <artifact:resolveFile key="org.nuxeo:nuxeo-ftest::zip"/>
    </unzip>
    <import file="${out.dir}/nuxeo-ftest.xml"/>

    <!-- Instruction for installing the MP to be tested -->
    <property name="mp.install" value="file:${out.dir}/polymer-sample-ui-package-${maven.project.version}.zip"/>
    <!-- Override default prepare-environment target to make it download your MP -->
    <target name="prepare-environment" depends="_init,prepare-db,prepare-tomcat,prepare-jboss">
        <condition property="cmd.npm" value="npm.cmd" else="npm">
            <os family="windows"/>
        </condition>
        <exec executable="${cmd.npm}" failonerror="true">
            <arg value="install"/>
        </exec>
        <exec executable="${cmd.npm}" spawn="true">
            <arg value="start"/>
        </exec>
        <copy todir="${out.dir}">
            <!-- a potential studio bundle -->
            <!--<artifact:file key="nuxeo-studio:your-project" />-->
            <!-- your bundles -->
            <artifact:file key="polymer.restAPI.example:polymer-sample-ui-package::zip"/>
        </copy>
    </target>

    <!-- temp workaround for NXBT-912 -->
    <target name="start-unix" if="osfamily-unix">
      <if>
        <available file="${nuxeo.data}/installAfterRestart.log"/>
        <then>
          <echo level="info" message="Execute pending actions before start"/>
          <exec executable="${nuxeo.home}/bin/nuxeoctl" spawn="false" failonerror="true">
            <arg value="mp-hotfix"/>
            <arg value="${nuxeoctl.option.clid}" if:set="nuxeoctl.option.clid" unless:blank="${nuxeoctl.option.clid}"/>
            <env key="LAUNCHER_DEBUG" value="${launcher.debug}"/>
          </exec>
          <exec executable="${nuxeo.home}/bin/nuxeoctl" spawn="false" failonerror="true">
            <arg value="mp-install"/>
            <arg value="${nuxeoctl.option.clid}" if:set="nuxeoctl.option.clid" unless:blank="${nuxeoctl.option.clid}"/>
            <env key="LAUNCHER_DEBUG" value="${launcher.debug}"/>
          </exec>
        </then>
      </if>
      <chmod dir="${nuxeo.home}/bin" perm="ugx" includes="*.sh,*ctl"/>
      <exec executable="${nuxeo.home}/bin/nuxeoctl" spawn="false" failonerror="false" resultproperty="retcode">
        <arg value="start"/>
        <arg value="${nuxeoctl.option.clid}" if:set="nuxeoctl.option.clid" unless:blank="${nuxeoctl.option.clid}"/>
        <env key="LAUNCHER_DEBUG" value="${launcher.debug}"/>
      </exec>
      <condition property="startup.failed" value="${retcode}">
        <not>
          <equals arg1="${retcode}" arg2="0"/>
        </not>
      </condition>
      <antcall target="stop-iffailed"/>
    </target>

    <target name="run-tests" depends="_init">
        <condition property="cmd.npm" value="npm.cmd" else="npm">
            <os family="windows"/>
        </condition>
        <exec executable="${cmd.npm}" failonerror="true">
            <arg value="test"/>
        </exec>
    </target>

</project>
